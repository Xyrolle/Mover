{"ast":null,"code":"var _jsxFileName = \"/Users/xyrolle/Documents/sagaapi/src/components/Movie.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadMovies } from \"../actions\";\nimport { getMovie } from \"../selectors\";\n\nconst Movie = ({\n  loadMovies,\n  movies,\n  isLoading,\n  error,\n  keyword\n}) => {\n  useEffect(() => {\n    loadMovies();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"a movie\"), console.log(isLoading, error, keyword), movies && JSON.stringify(movies));\n};\n\nconst mapStateToProps = ({\n  isLoading,\n  movies,\n  error,\n  keyword\n}) => ({\n  movies,\n  isLoading,\n  error,\n  keyword\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadMovies: () => dispatch(loadMovies())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","map":{"version":3,"sources":["/Users/xyrolle/Documents/sagaapi/src/components/Movie.js"],"names":["React","Fragment","useEffect","connect","loadMovies","getMovie","Movie","movies","isLoading","error","keyword","console","log","JSON","stringify","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEF,EAAAA,UAAF;AAAcG,EAAAA,MAAd;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA,KAAjC;AAAwCC,EAAAA;AAAxC,CAAD,KAAuD;AACnER,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGO,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBC,KAAvB,EAA8BC,OAA9B,CAFH,EAGGH,MAAM,IAAIM,IAAI,CAACC,SAAL,CAAeP,MAAf,CAHb,CADF;AAQD,CAbD;;AAeA,MAAMQ,eAAe,GAAG,CAAC;AAAEP,EAAAA,SAAF;AAAaD,EAAAA,MAAb;AAAqBE,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,MAA4C;AAClEH,EAAAA,MADkE;AAElEC,EAAAA,SAFkE;AAGlEC,EAAAA,KAHkE;AAIlEC,EAAAA;AAJkE,CAA5C,CAAxB;;AAOA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACb,UAAU,EAAX;AADc,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,KAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadMovies } from \"../actions\";\nimport { getMovie } from \"../selectors\";\n\nconst Movie = ({ loadMovies, movies, isLoading, error, keyword }) => {\n  useEffect(() => {\n    loadMovies();\n  }, []);\n\n  return (\n    <Fragment>\n      <div>a movie</div>\n      {console.log(isLoading, error, keyword)}\n      {movies && JSON.stringify(movies)}\n      {/*<button onClick={() => console.log(\"hello\", movies)}>hello</button>*/}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ isLoading, movies, error, keyword }) => ({\n  movies,\n  isLoading,\n  error,\n  keyword,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadMovies: () => dispatch(loadMovies()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\n"]},"metadata":{},"sourceType":"module"}