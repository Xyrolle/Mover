{"ast":null,"code":"var _jsxFileName = \"/Users/xyrolle/Documents/sagaapi/src/components/Movies/Movies.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Movie from \"../Movie/Movie\";\nimport { fetchPopularMovies, changeSearchKeyword, fetchMoviesByKeyword } from \"../../actions\";\nconst BASE_IMAGE_PATH = \"https://image.tmdb.org/t/p/w500\";\n\nconst posterPath = path => {\n  return `${BASE_IMAGE_PATH}/${path}`;\n};\n\nconst Movies = ({\n  fetchPopularMovies,\n  fetchMoviesByKeyword,\n  changeSearchKeyword,\n  movies,\n  isLoading,\n  error,\n  keyword\n}) => {\n  useEffect(() => {// fetchPopularMovies();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"a movie\"), \"keyword is \", keyword, \" ----\", error, isLoading, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeSearchKeyword(\"hello\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"keyword change\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => fetchMoviesByKeyword(keyword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"by keyword\"), console.log(movies), movies.length && /*#__PURE__*/React.createElement(Movie, {\n    title: movies[0].original_title,\n    posterPath: posterPath(movies[0].poster),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  isLoading,\n  movies,\n  error,\n  keyword\n}) => ({\n  movies,\n  isLoading,\n  error,\n  keyword\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPopularMovies: () => dispatch(fetchPopularMovies()),\n  fetchMoviesByKeyword: keyword => dispatch(fetchMoviesByKeyword(keyword)),\n  changeSearchKeyword: keyword => dispatch(changeSearchKeyword(keyword))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","map":{"version":3,"sources":["/Users/xyrolle/Documents/sagaapi/src/components/Movies/Movies.js"],"names":["React","Fragment","useEffect","connect","Movie","fetchPopularMovies","changeSearchKeyword","fetchMoviesByKeyword","BASE_IMAGE_PATH","posterPath","path","Movies","movies","isLoading","error","keyword","console","log","length","original_title","poster","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,oBAHF,QAIO,eAJP;AAMA,MAAMC,eAAe,GAAG,iCAAxB;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,SAAQ,GAAEF,eAAgB,IAAGE,IAAK,EAAlC;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,CAAC;AACdN,EAAAA,kBADc;AAEdE,EAAAA,oBAFc;AAGdD,EAAAA,mBAHc;AAIdM,EAAAA,MAJc;AAKdC,EAAAA,SALc;AAMdC,EAAAA,KANc;AAOdC,EAAAA;AAPc,CAAD,KAQT;AACJb,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,iBAEca,OAFd,WAGGD,KAHH,EAIGD,SAJH,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMP,mBAAmB,CAAC,OAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAMC,oBAAoB,CAACQ,OAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUGC,OAAO,CAACC,GAAR,CAAYL,MAAZ,CAVH,EAWGA,MAAM,CAACM,MAAP,iBACC,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEN,MAAM,CAAC,CAAD,CAAN,CAAUO,cADnB;AAEE,IAAA,UAAU,EAAEV,UAAU,CAACG,MAAM,CAAC,CAAD,CAAN,CAAUQ,MAAX,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF;AAoBD,CAjCD;;AAmCA,MAAMC,eAAe,GAAG,CAAC;AAAER,EAAAA,SAAF;AAAaD,EAAAA,MAAb;AAAqBE,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,MAA4C;AAClEH,EAAAA,MADkE;AAElEC,EAAAA,SAFkE;AAGlEC,EAAAA,KAHkE;AAIlEC,EAAAA;AAJkE,CAA5C,CAAxB;;AAOA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,kBAAkB,EAAE,MAAMkB,QAAQ,CAAClB,kBAAkB,EAAnB,CADM;AAExCE,EAAAA,oBAAoB,EAAGQ,OAAD,IAAaQ,QAAQ,CAAChB,oBAAoB,CAACQ,OAAD,CAArB,CAFH;AAGxCT,EAAAA,mBAAmB,EAAGS,OAAD,IAAaQ,QAAQ,CAACjB,mBAAmB,CAACS,OAAD,CAApB;AAHF,CAAf,CAA3B;;AAMA,eAAeZ,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,MAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Movie from \"../Movie/Movie\";\n\nimport {\n  fetchPopularMovies,\n  changeSearchKeyword,\n  fetchMoviesByKeyword,\n} from \"../../actions\";\n\nconst BASE_IMAGE_PATH = \"https://image.tmdb.org/t/p/w500\";\n\nconst posterPath = (path) => {\n  return `${BASE_IMAGE_PATH}/${path}`;\n};\n\nconst Movies = ({\n  fetchPopularMovies,\n  fetchMoviesByKeyword,\n  changeSearchKeyword,\n  movies,\n  isLoading,\n  error,\n  keyword,\n}) => {\n  useEffect(() => {\n    // fetchPopularMovies();\n  }, []);\n\n  return (\n    <Fragment>\n      <div>a movie</div>\n      keyword is {keyword} ----\n      {error}\n      {isLoading}\n      {/*<button onClick={() => console.log(\"hello\", movies)}>hello</button>*/}\n      <button onClick={() => changeSearchKeyword(\"hello\")}>\n        keyword change\n      </button>\n      <button onClick={() => fetchMoviesByKeyword(keyword)}>by keyword</button>\n      {console.log(movies)}\n      {movies.length && (\n        <Movie\n          title={movies[0].original_title}\n          posterPath={posterPath(movies[0].poster)}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ isLoading, movies, error, keyword }) => ({\n  movies,\n  isLoading,\n  error,\n  keyword,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchPopularMovies: () => dispatch(fetchPopularMovies()),\n  fetchMoviesByKeyword: (keyword) => dispatch(fetchMoviesByKeyword(keyword)),\n  changeSearchKeyword: (keyword) => dispatch(changeSearchKeyword(keyword)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n"]},"metadata":{},"sourceType":"module"}