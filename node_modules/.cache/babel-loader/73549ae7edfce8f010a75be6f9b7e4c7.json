{"ast":null,"code":"var _jsxFileName = \"/Users/xyrolle/Documents/sagaapi/src/components/Movies/Movies.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport Movie from \"../Movie/Movie\";\nimport { fetchPopularMovies, changeSearchKeyword, fetchMoviesByKeyword } from \"../../actions\";\nconst BASE_IMAGE_PATH = \"https://image.tmdb.org/t/p/w500\";\n\nconst posterPath = path => {\n  return `${BASE_IMAGE_PATH}/${path}`;\n};\n\nconst Movies = ({\n  fetchPopularMovies,\n  fetchMoviesByKeyword,\n  changeSearchKeyword,\n  movies,\n  isLoading,\n  error,\n  keyword\n}) => {\n  useEffect(() => {// fetchPopularMovies();\n  }, []);\n  return (\n    /*#__PURE__*/\n    React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, \"a movie\"), \"keyword is \", keyword, \" ----\", error, isLoading,\n    /*#__PURE__*/\n    React.createElement(\"button\", {\n      onClick: () => changeSearchKeyword(\"hello\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, \"keyword change\"),\n    /*#__PURE__*/\n    React.createElement(\"button\", {\n      onClick: () => fetchMoviesByKeyword(keyword),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, \"by keyword\"), console.log(movies), movies.length &&\n    /*#__PURE__*/\n    React.createElement(Movie, {\n      title: movies[0].original_title,\n      poster: posterPath(movies[0].poster_path),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }))\n  );\n};\n\nconst mapStateToProps = ({\n  isLoading,\n  movies,\n  error,\n  keyword\n}) => ({\n  movies,\n  isLoading,\n  error,\n  keyword\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPopularMovies: () => dispatch(fetchPopularMovies()),\n  fetchMoviesByKeyword: keyword => dispatch(fetchMoviesByKeyword(keyword)),\n  changeSearchKeyword: keyword => dispatch(changeSearchKeyword(keyword))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","map":{"version":3,"sources":["/Users/xyrolle/Documents/sagaapi/src/components/Movies/Movies.js"],"names":["React","Fragment","useEffect","connect","useSelector","Movie","fetchPopularMovies","changeSearchKeyword","fetchMoviesByKeyword","BASE_IMAGE_PATH","posterPath","path","Movies","movies","isLoading","error","keyword","console","log","length","original_title","poster_path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,oBAHF,QAIO,eAJP;AAMA,MAAMC,eAAe,GAAG,iCAAxB;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,SAAQ,GAAEF,eAAgB,IAAGE,IAAK,EAAlC;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,CAAC;AACdN,EAAAA,kBADc;AAEdE,EAAAA,oBAFc;AAGdD,EAAAA,mBAHc;AAIdM,EAAAA,MAJc;AAKdC,EAAAA,SALc;AAMdC,EAAAA,KANc;AAOdC,EAAAA;AAPc,CAAD,KAQT;AACJd,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA;AAAA;AACE,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,iBAEcc,OAFd,WAGGD,KAHH,EAIGD,SAJH;AAAA;AAKE;AAAQ,MAAA,OAAO,EAAE,MAAMP,mBAAmB,CAAC,OAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAQE;AAAQ,MAAA,OAAO,EAAE,MAAMC,oBAAoB,CAACQ,OAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,EASGC,OAAO,CAACC,GAAR,CAAYL,MAAZ,CATH,EAUGA,MAAM,CAACM,MAAP;AAAA;AACC,wBAAC,KAAD;AACE,MAAA,KAAK,EAAEN,MAAM,CAAC,CAAD,CAAN,CAAUO,cADnB;AAEE,MAAA,MAAM,EAAEV,UAAU,CAACG,MAAM,CAAC,CAAD,CAAN,CAAUQ,WAAX,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ;AADF;AAmBD,CAhCD;;AAkCA,MAAMC,eAAe,GAAG,CAAC;AAAER,EAAAA,SAAF;AAAaD,EAAAA,MAAb;AAAqBE,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,MAA4C;AAClEH,EAAAA,MADkE;AAElEC,EAAAA,SAFkE;AAGlEC,EAAAA,KAHkE;AAIlEC,EAAAA;AAJkE,CAA5C,CAAxB;;AAOA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,kBAAkB,EAAE,MAAMkB,QAAQ,CAAClB,kBAAkB,EAAnB,CADM;AAExCE,EAAAA,oBAAoB,EAAGQ,OAAD,IAAaQ,QAAQ,CAAChB,oBAAoB,CAACQ,OAAD,CAArB,CAFH;AAGxCT,EAAAA,mBAAmB,EAAGS,OAAD,IAAaQ,QAAQ,CAACjB,mBAAmB,CAACS,OAAD,CAApB;AAHF,CAAf,CAA3B;;AAMA,eAAeb,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,MAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport Movie from \"../Movie/Movie\";\n\nimport {\n  fetchPopularMovies,\n  changeSearchKeyword,\n  fetchMoviesByKeyword,\n} from \"../../actions\";\n\nconst BASE_IMAGE_PATH = \"https://image.tmdb.org/t/p/w500\";\n\nconst posterPath = (path) => {\n  return `${BASE_IMAGE_PATH}/${path}`;\n};\n\nconst Movies = ({\n  fetchPopularMovies,\n  fetchMoviesByKeyword,\n  changeSearchKeyword,\n  movies,\n  isLoading,\n  error,\n  keyword,\n}) => {\n  useEffect(() => {\n    // fetchPopularMovies();\n  }, []);\n\n  return (\n    <Fragment>\n      <div>a movie</div>\n      keyword is {keyword} ----\n      {error}\n      {isLoading}\n      <button onClick={() => changeSearchKeyword(\"hello\")}>\n        keyword change\n      </button>\n      <button onClick={() => fetchMoviesByKeyword(keyword)}>by keyword</button>\n      {console.log(movies)}\n      {movies.length && (\n        <Movie\n          title={movies[0].original_title}\n          poster={posterPath(movies[0].poster_path)}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ isLoading, movies, error, keyword }) => ({\n  movies,\n  isLoading,\n  error,\n  keyword,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchPopularMovies: () => dispatch(fetchPopularMovies()),\n  fetchMoviesByKeyword: (keyword) => dispatch(fetchMoviesByKeyword(keyword)),\n  changeSearchKeyword: (keyword) => dispatch(changeSearchKeyword(keyword)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n"]},"metadata":{},"sourceType":"module"}