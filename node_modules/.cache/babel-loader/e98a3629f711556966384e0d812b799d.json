{"ast":null,"code":"var _jsxFileName = \"/Users/xyrolle/Documents/sagaapi/src/components/Movie.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPopularMovies, changeSearchKeyword } from \"../actions\";\nimport { fetchMoviesByKeyword } from \"../api\"; // import { getMovie } from \"../selectors\";\n\nconst Movie = ({\n  fetchPopularMovies,\n  changeSearchKeyword,\n  movies,\n  isLoading,\n  error,\n  keyword\n}) => {\n  useEffect(() => {\n    fetchPopularMovies();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"a movie\"), movies && JSON.stringify(movies), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeSearchKeyword(\"hello\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"keyword change\"));\n};\n\nconst mapStateToProps = ({\n  isLoading,\n  movies,\n  error,\n  keyword\n}) => ({\n  movies,\n  isLoading,\n  error,\n  keyword\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPopularMovies: () => dispatch(fetchPopularMovies()),\n  fetchByKeyword: () => dispatch(fetchMoviesByKeyword()),\n  changeSearchKeyword: keyword => dispatch(changeSearchKeyword(keyword))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","map":{"version":3,"sources":["/Users/xyrolle/Documents/sagaapi/src/components/Movie.js"],"names":["React","Fragment","useEffect","connect","fetchPopularMovies","changeSearchKeyword","fetchMoviesByKeyword","Movie","movies","isLoading","error","keyword","JSON","stringify","mapStateToProps","mapDispatchToProps","dispatch","fetchByKeyword"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,YAAxD;AACA,SAASC,oBAAT,QAAqC,QAArC,C,CACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbH,EAAAA,kBADa;AAEbC,EAAAA,mBAFa;AAGbG,EAAAA,MAHa;AAIbC,EAAAA,SAJa;AAKbC,EAAAA,KALa;AAMbC,EAAAA;AANa,CAAD,KAOR;AACJT,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGI,MAAM,IAAII,IAAI,CAACC,SAAL,CAAeL,MAAf,CAFb,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAMH,mBAAmB,CAAC,OAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAUD,CAtBD;;AAwBA,MAAMS,eAAe,GAAG,CAAC;AAAEL,EAAAA,SAAF;AAAaD,EAAAA,MAAb;AAAqBE,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,MAA4C;AAClEH,EAAAA,MADkE;AAElEC,EAAAA,SAFkE;AAGlEC,EAAAA,KAHkE;AAIlEC,EAAAA;AAJkE,CAA5C,CAAxB;;AAOA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,kBAAkB,EAAE,MAAMY,QAAQ,CAACZ,kBAAkB,EAAnB,CADM;AAExCa,EAAAA,cAAc,EAAE,MAAMD,QAAQ,CAACV,oBAAoB,EAArB,CAFU;AAGxCD,EAAAA,mBAAmB,EAAGM,OAAD,IAAaK,QAAQ,CAACX,mBAAmB,CAACM,OAAD,CAApB;AAHF,CAAf,CAA3B;;AAMA,eAAeR,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,KAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchPopularMovies, changeSearchKeyword } from \"../actions\";\nimport { fetchMoviesByKeyword } from \"../api\";\n// import { getMovie } from \"../selectors\";\n\nconst Movie = ({\n  fetchPopularMovies,\n  changeSearchKeyword,\n  movies,\n  isLoading,\n  error,\n  keyword,\n}) => {\n  useEffect(() => {\n    fetchPopularMovies();\n  }, []);\n\n  return (\n    <Fragment>\n      <div>a movie</div>\n      {movies && JSON.stringify(movies)}\n      {/*<button onClick={() => console.log(\"hello\", movies)}>hello</button>*/}\n      <button onClick={() => changeSearchKeyword(\"hello\")}>\n        keyword change\n      </button>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ isLoading, movies, error, keyword }) => ({\n  movies,\n  isLoading,\n  error,\n  keyword,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchPopularMovies: () => dispatch(fetchPopularMovies()),\n  fetchByKeyword: () => dispatch(fetchMoviesByKeyword()),\n  changeSearchKeyword: (keyword) => dispatch(changeSearchKeyword(keyword)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\n"]},"metadata":{},"sourceType":"module"}